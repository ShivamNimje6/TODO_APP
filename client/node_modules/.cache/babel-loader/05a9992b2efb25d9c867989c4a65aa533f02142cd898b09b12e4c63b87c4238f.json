{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Styles from \"./TODO.module.css\";\nimport axios from \"axios\";\nexport function TODO(props) {\n  _s();\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todoData, setTodoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editMode, setEditMode] = useState(null); // State to track edit mode\n  const [editedTodoTitle, setEditedTodoTitle] = useState(\"\"); // State to hold edited todo title\n  const [editedTodoDesc, setEditedTodoDesc] = useState(\"\"); // State to hold edited todo description\n\n  useEffect(() => {\n    fetchTodo();\n  }, []);\n  const fetchTodo = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/todo\");\n      setTodoData(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching todos:\", error);\n    }\n  };\n  const addTodo = () => {\n    const options = {\n      method: \"POST\",\n      url: \"http://localhost:8000/api/todo\",\n      headers: {\n        accept: \"application/json\"\n      },\n      data: {\n        title: newTodo\n      }\n    };\n    axios.request(options).then(function (response) {\n      console.log(\"New todo added:\", response.data);\n      setTodoData(prevData => [...prevData, response.data]);\n      setNewTodo(\"\");\n    }).catch(err => {\n      console.error(\"Error adding todo:\", err);\n    });\n  };\n  const deleteTodo = id => {\n    const options = {\n      method: \"DELETE\",\n      url: `http://localhost:8000/api/todo/${id}`,\n      headers: {\n        accept: \"application/json\"\n      }\n    };\n    axios.request(options).then(function () {\n      console.log(\"Todo deleted:\", id);\n      setTodoData(prevData => prevData.filter(todo => todo._id !== id));\n    }).catch(err => {\n      console.error(\"Error deleting todo:\", err);\n    });\n  };\n  const updateTodoStatus = (id, done) => {\n    const options = {\n      method: \"PATCH\",\n      url: `http://localhost:8000/api/todo/${id}`,\n      headers: {\n        accept: \"application/json\"\n      },\n      data: {\n        done: !done\n      }\n    };\n    axios.request(options).then(function (response) {\n      console.log(\"Todo status updated:\", response.data);\n      setTodoData(prevData => prevData.map(todo => todo._id === id ? response.data : todo));\n    }).catch(err => {\n      console.error(\"Error updating todo status:\", err);\n    });\n  };\n  const toggleEditMode = (id, currentTitle, currentDesc) => {\n    setEditMode(id); // Set edit mode for the current todo\n    setEditedTodoTitle(currentTitle); // Set initial value of edited todo title\n    setEditedTodoDesc(currentDesc); // Set initial value of edited todo description\n  };\n  const saveEditedTodo = async id => {\n    try {\n      const options = {\n        method: \"PATCH\",\n        url: `http://localhost:8000/api/todo/${id}`,\n        headers: {\n          accept: \"application/json\"\n        },\n        data: {\n          title: editedTodoTitle,\n          description: editedTodoDesc // Add description field to data\n        }\n      };\n      const response = await axios.request(options);\n      console.log(\"Todo updated:\", response.data);\n      setTodoData(prevData => prevData.map(todo => todo._id === id ? response.data : todo));\n      setEditMode(null); // Exit edit mode after saving\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n}\n_s(TODO, \"zCbPn0eTCOneO6a236XyecioUV8=\");\n_c = TODO;\nvar _c;\n$RefreshReg$(_c, \"TODO\");","map":{"version":3,"names":["useEffect","useState","Styles","axios","TODO","props","_s","newTodo","setNewTodo","todoData","setTodoData","loading","setLoading","editMode","setEditMode","editedTodoTitle","setEditedTodoTitle","editedTodoDesc","setEditedTodoDesc","fetchTodo","response","get","data","error","console","addTodo","options","method","url","headers","accept","title","request","then","log","prevData","catch","err","deleteTodo","id","filter","todo","_id","updateTodoStatus","done","map","toggleEditMode","currentTitle","currentDesc","saveEditedTodo","description","_c","$RefreshReg$"],"sources":["D:/Desktop_documents/7th_Semester/JAVA/API/todo_app/client/src/Views/TODO/TODO.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Styles from \"./TODO.module.css\";\r\nimport axios from \"axios\";\r\n\r\nexport function TODO(props) {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [todoData, setTodoData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(null); // State to track edit mode\r\n  const [editedTodoTitle, setEditedTodoTitle] = useState(\"\"); // State to hold edited todo title\r\n  const [editedTodoDesc, setEditedTodoDesc] = useState(\"\"); // State to hold edited todo description\r\n\r\n  useEffect(() => {\r\n    fetchTodo();\r\n  }, []);\r\n\r\n  const fetchTodo = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/api/todo\");\r\n      setTodoData(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching todos:\", error);\r\n    }\r\n  };\r\n\r\n  const addTodo = () => {\r\n    const options = {\r\n      method: \"POST\",\r\n      url: \"http://localhost:8000/api/todo\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n      },\r\n      data: {\r\n        title: newTodo,\r\n      },\r\n    };\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        console.log(\"New todo added:\", response.data);\r\n        setTodoData((prevData) => [...prevData, response.data]);\r\n        setNewTodo(\"\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error adding todo:\", err);\r\n      });\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const options = {\r\n      method: \"DELETE\",\r\n      url: `http://localhost:8000/api/todo/${id}`,\r\n      headers: {\r\n        accept: \"application/json\",\r\n      },\r\n    };\r\n    axios\r\n      .request(options)\r\n      .then(function () {\r\n        console.log(\"Todo deleted:\", id);\r\n        setTodoData((prevData) => prevData.filter((todo) => todo._id !== id));\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error deleting todo:\", err);\r\n      });\r\n  };\r\n\r\n  const updateTodoStatus = (id, done) => {\r\n    const options = {\r\n      method: \"PATCH\",\r\n      url: `http://localhost:8000/api/todo/${id}`,\r\n      headers: {\r\n        accept: \"application/json\",\r\n      },\r\n      data: {\r\n        done: !done,\r\n      },\r\n    };\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        console.log(\"Todo status updated:\", response.data);\r\n        setTodoData((prevData) =>\r\n          prevData.map((todo) => (todo._id === id ? response.data : todo))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error updating todo status:\", err);\r\n      });\r\n  };\r\n\r\n  const toggleEditMode = (id, currentTitle, currentDesc) => {\r\n    setEditMode(id); // Set edit mode for the current todo\r\n    setEditedTodoTitle(currentTitle); // Set initial value of edited todo title\r\n    setEditedTodoDesc(currentDesc); // Set initial value of edited todo description\r\n  };\r\n\r\n  const saveEditedTodo = async (id) => {\r\n    try {\r\n      const options = {\r\n        method: \"PATCH\",\r\n        url: `http://localhost:8000/api/todo/${id}`,\r\n        headers: {\r\n          accept: \"application/json\",\r\n        },\r\n        data: {\r\n          title: editedTodoTitle,\r\n          description: editedTodoDesc, // Add description field to data\r\n        },\r\n      };\r\n      const response = await axios.request(options);\r\n      console.log(\"Todo updated:\", response.data);\r\n      setTodoData((prevData) =>\r\n        prevData.map((todo) => (todo._id === id ? response.data : todo))\r\n      );\r\n      setEditMode(null); // Exit edit mode after saving\r\n    } catch (error) {\r\n      console.error(\"Error updating todo:\", error);\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}